class Solution {
    // Function to flatten a linked list
    Node merge(Node a,Node b){
       
        
        Node res=new Node(0);
        Node dummy=res;
        
        while(a!=null && b!=null){
            
            if(a.data<=b.data){
                dummy.bottom=a;
                a=a.bottom;
            }else{
                dummy.bottom=b;
                b=b.bottom;
            }
            dummy=dummy.bottom;
        }
        dummy.bottom= (a!=null) ? a : b;
        return res.bottom;
    }
    Node flatten(Node root) {
        // code here
        if(root==null || root.next==null){
            return root;
        }
        
        root.next=flatten(root.next);
        
        root=merge(root,root.next);
        
        return root;
    }
}
