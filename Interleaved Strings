class Solution {
    int[][] dp;

    public boolean helper(String s1, String s2, String s3, int i, int j) {
        if (i == s1.length() && j == s2.length()) return true;

        if (dp[i][j] != -1) return dp[i][j] == 1;

        boolean res = false;

        if (i < s1.length() && s1.charAt(i) == s3.charAt(i + j)) {
            res = res || helper(s1, s2, s3, i + 1, j);
        }

        if (j < s2.length() && s2.charAt(j) == s3.charAt(i + j)) {
            res = res || helper(s1, s2, s3, i, j + 1);
        }

        dp[i][j] = res ? 1 : 0;
        return res;
    }

    public boolean isInterLeave(String s1, String s2, String s3) {
        if (s1.length() + s2.length() != s3.length()) return false;

        dp = new int[s1.length() + 1][s2.length() + 1];
        for (int[] row : dp) Arrays.fill(row, -1);

        return helper(s1, s2, s3, 0, 0);
    }
}
