// User function Template for Java

class Solution {
    // Function to find the minimum number of platforms required at the
    // railway station such that no train waits.
    static int findPlatform(int arr[], int dep[]) {
        // add your code here
        int [][] pair=new int [arr.length][2];
        
        for(int i=0 ; i<arr.length ; i++){
            pair[i][0]=arr[i];
            pair[i][1]=dep[i];
        }
        
        Arrays.sort(pair , (a,b) -> Integer.compare(a[0],b[0]));
        
        //storing departure time in minheap
        PriorityQueue<Integer> pq=new PriorityQueue<>();
        
       int maxP=0;
        
        for(int i=0 ;  i<pair.length ; i++){
            int a=pair[i][0];
            int d=pair[i][1];
             
             //poping only when we encounter the train whosee srrival is greater than the 
             //current minimum departure;
             while(!pq.isEmpty() && pq.peek()<a){
                 pq.poll();
             }
             
             pq.add(d);
             
             maxP=Math.max(maxP,pq.size());
        }
        
        return maxP;
    }
}
