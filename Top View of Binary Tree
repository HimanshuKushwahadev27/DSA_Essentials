/*
class Node{
    int data;
    Node left;
    Node right;
    Node(int data){
        this.data = data;
        left=null;
        right=null;
    }
}
*/

class pair{
    Node node ;
    int pos ;
    pair(Node node , int pos){
        this.node=node;
        this.pos=pos;
    }
}
class Solution {
    // Function to return a list of nodes visible from the top view
    // from left to right in Binary Tree.
    static ArrayList<Integer> topView(Node root) {
        // code here
        TreeMap<Integer , Integer> tm=new TreeMap<>();
        
        ArrayList<Integer> al=new ArrayList<>();
        
        Queue<pair> q= new LinkedList<>();
        
        q.add(new pair(root,0));
        
        while(!q.isEmpty()){
            pair curr=q.poll();
            
            Node temp=curr.node;
            int p=curr.pos;
            
           if(!tm.containsKey(p)){
               tm.put(p,temp.data);
           }
           
           if(temp.left!=null){
               q.add(new pair(temp.left,p-1));
           }
           if(temp.right!=null){
               q.add(new pair(temp.right,p+1));
           }
        }
        
        for(int v : tm.values()){
            al.add(v);
        }
        return al;    
        
    }
}
