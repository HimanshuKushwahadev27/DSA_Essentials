class Solution {
    public int rec(int coins[] , int sum , int [][]dp , int n){
        
        if(sum==0)return 1;
        if(n==0)return 0;
        
        if(dp[sum][n]!=-1)return dp[sum][n];
        
        
        dp[sum][n] = rec(coins ,sum ,dp ,n-1);
        
        if(coins[n-1] <= sum){
            
            //not reducing n as we can use same coin again in future
            
            dp[sum][n]+= rec(coins , sum-coins[n-1] , dp , n);
        }
        
        return dp[sum][n];
    }
    public int count(int coins[], int sum) {
        // code here.
        int [][] dp=new int [sum+1][coins.length+1];
        
        for(int [] r : dp){
            Arrays.fill(r,-1);
        }
        
        return rec(coins , sum ,dp ,coins.length);
    }
}
