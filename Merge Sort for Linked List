/*
The structure of linked list is the following

class Node
{
int data;
Node next;
    Node(int key)
    {
        data = key;
        next = null;
    }
}
*/

class Solution {
    // Function to sort the given linked list using Merge Sort.
    static Node split(Node head){
        Node slow=head;
        Node fast=head;
        
        while(fast!=null && fast.next!=null){
            fast=fast.next.next;
            if(fast!=null){
                slow=slow.next;
            }
        }
        Node temp=slow.next;
        slow.next=null;
        return temp;
    }
    static Node merge(Node head , Node half){
        
        if(head==null)return half;
        if(half==null)return head;
        
        if(head.data<half.data){
            head.next=merge(head.next,half);
            return head;
        }else{
            half.next=merge(head,half.next);
            return half;
        }
    }
    static Node mergeSort(Node head) {
        // add your code here
        if(head==null || head.next==null){
            return head;
        }
        
        Node half=split(head);
        
        head=mergeSort(head);
        half=mergeSort(half);
        
        return merge(head,half);
    }
}
